let restaurants,neighborhoods,cuisines,map;window.markers=[];const config={rootMargin:"50px 0px",threshold:.01},loadImage=e=>{e.srcset=e.dataset.srcset};let observer;const handleIntersection=e=>{e.forEach(e=>{e.intersectionRatio>0&&(observer.unobserve(e.target),loadImage(e.target))})};function fetchNeighborhoods(){DBHelper.fetchNeighborhoods((e,t)=>{e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML())})}function fillNeighborhoodsHTML(e=self.neighborhoods){const t=document.getElementsByClassName("filter__select-neighbours")[0];e.forEach(e=>{const n=document.createElement("option");n.innerHTML=e,n.value=e,t.append(n)})}function fetchCuisines(){DBHelper.fetchCuisines((e,t)=>{e?console.error(e):(self.cuisines=t,fillCuisinesHTML())})}function fillCuisinesHTML(e=self.cuisines){const t=document.getElementsByClassName("filter__select-cuisines")[0];e.forEach(e=>{const n=document.createElement("option");n.innerHTML=e,n.value=e,t.append(n)})}function initMap(){self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1}),updateRestaurants()}function updateRestaurants(){const e=document.getElementsByClassName("filter__select-cuisines")[0],t=document.getElementsByClassName("filter__select-neighbours")[0],n=e.selectedIndex,s=t.selectedIndex,r=e[n].value,a=t[s].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(r,a,(e,t)=>{e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML())})}function resetRestaurants(e){self.restaurants=[],document.getElementsByClassName("restaurants-list")[0].innerHTML="",self.markers.forEach(e=>e.setMap(null)),self.markers=[],self.restaurants=e}function fillRestaurantsHTML(e=self.restaurants){const t=document.getElementsByClassName("restaurants-list")[0];e.forEach(e=>{t.append(createRestaurantHTML(e))}),addMarkersToMap()}function createRestaurantHTML(e){const t=document.createElement("li"),n=document.createElement("img"),s=DBHelper.imageUrlForRestaurant(e),r=s.substring(0,s.lastIndexOf("."));n.className="restaurant__image lazy-loading",n.dataset.srcset=`${r}-small.webp 400w, ${r}.webp 800w`,n.alt=["restaurant",e.name,e.neighborhood].join(" ").toLowerCase(),t.append(n),observer.observe(n);const a=document.createElement("h2");a.innerHTML=e.name,t.append(a);const o=document.createElement("p");o.innerHTML=e.neighborhood,t.append(o);const l=document.createElement("p");l.innerHTML=e.address,t.append(l);const c=document.createElement("a");return c.innerHTML="View Details",c.href=DBHelper.urlForRestaurant(e),t.append(c),t}function addMarkersToMap(e=self.restaurants){e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",()=>{window.location.href=t.url}),self.markers.push(t)})}observer=new IntersectionObserver(handleIntersection,config),document.addEventListener("DOMContentLoaded",e=>{fetchNeighborhoods(),fetchCuisines()});